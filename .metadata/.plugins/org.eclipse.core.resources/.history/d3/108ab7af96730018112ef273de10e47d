package automationFramework;

import java.io.FileReader;
import org.testng.Assert;
import Utilities.Constants;
import Utilities.ExcelUtils;
import Utilities.PageObjectModel;
import au.com.bytecode.opencsv.CSVReader;
import pageObjects.Home_Page;
import pageObjects.LogIn_Page;

import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

public class FirstTestCase {
	
	//Create Soft Assertions
	
	Home_Page homeObject;
	LogIn_Page loginObject;
	
	@Parameters("browser")
	@BeforeTest
	public void setUp(String browser) throws Exception {
		
		PageObjectModel.initializeAll(browser);
		
		//ExcelUtils.setExcelFile(Constants.Path_TestData + Constants.Excel_TestData,"Sheet1");
		
	}
	
	@Test
	public void getTitle() {
		try {
			//Initialize Extent Test
			PageObjectModel.test = PageObjectModel.extent.createTest("getTitle("+PageObjectModel.usedBrowser+")", "Checks the actual page's title");
			homeObject = new Home_Page();
			
			//Get the site's title
			String realResult = homeObject.getTitle();
			String expectedResult = "ONLINE STORE | Toolsqa Dummy Test site";
			
			// Print a Log In message to the screen
			System.out.println("Real result: " + realResult + " Expected result: " + expectedResult);
			
			//Compare if the gotten title is the expected one
			Assert.assertTrue(realResult.equalsIgnoreCase(expectedResult));
			PageObjectModel.test.pass("Page title expected: '"+realResult+"'");
			
		}catch(AssertionError e){
			
			PageObjectModel.test.fail("Page title doesn't match");
			
		}catch(Exception ef){
			
			PageObjectModel.test.fatal(ef.toString());
			
		}
	}
	
	@Test
	public void logInErrorMessageCheck() throws Exception {
		try {
			
			PageObjectModel.test = PageObjectModel.extent.createTest("logInErrorMessageCheck("+PageObjectModel.usedBrowser+")", "Checks the message errors when the logIn fails");
			
			String username;
			String password;
			String expectedMessage;
			
			String csvFile = Constants.Path_TestData + Constants.CSV_TestData;
			CSVReader reader = new CSVReader(new FileReader(csvFile));
			String [] nextLine;
			
			homeObject = new Home_Page();
			loginObject = (LogIn_Page)homeObject.goToMyAccount();
			
			while ((nextLine = reader.readNext()) != null) {
				try {
					username = nextLine[0];
					password = nextLine[1];
					expectedMessage = nextLine[2];
					
					String message;
					loginObject.insertUserCredentials(username,password);
					message = loginObject.submitUserCredentials();
							
					System.out.println("Page response: " + message);
					Assert.assertTrue(message.equalsIgnoreCase(expectedMessage));
					
					PageObjectModel.test.pass("Displayed message: '"+message+"'");
				}catch(AssertionError e) {
					
					PageObjectModel.test.fail("The displayed error is incorrect: "+e);
					
				}
			}
			String message;
			loginObject.insertUserCredentials("","");
			message = loginObject.submitUserCredentials();
			Assert.assertTrue(message.equalsIgnoreCase("Please enter your username and password."));
		}catch(Exception ef) {
			
			PageObjectModel.test.fatal(ef.toString());
			
		}
	}
	
	@AfterTest
	public void shutDown() {
		
		if (PageObjectModel.driver!=null) {
			// Close the driver
			PageObjectModel.driver.quit();
			
		}
		
		PageObjectModel.extent.flush();
		
	}

}
